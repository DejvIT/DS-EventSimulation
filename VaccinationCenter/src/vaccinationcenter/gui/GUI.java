/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vaccinationcenter.gui;

import cores.ISimDelegate;
import generators.Seeder;
import vaccinationcenter.app.Generators;
import vaccinationcenter.app.VaccinationCenter;

/**
 *
 * @author davidpavlicko
 */
public class GUI extends javax.swing.JFrame implements ISimDelegate {

    private Thread thread;
    private VaccinationCenter simulation;
    private int showNth;
    private Chart experimentChart; 
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        
        this.jButtonPause.setEnabled(false);
        this.jButtonStop.setEnabled(false);
        this.jButtonStart.setEnabled(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jTextFieldReplications = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButtonStart = new javax.swing.JButton();
        jButtonStop = new javax.swing.JButton();
        jButtonPause = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBoxMaxSpeed = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldWorkers = new javax.swing.JTextField();
        jTextFieldDoctors = new javax.swing.JTextField();
        jTextFieldNurses = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldOrderedPeople = new javax.swing.JTextField();
        jSliderSpeed = new javax.swing.JSlider();
        jPanel3 = new javax.swing.JPanel();
        jProgressBarEvents = new javax.swing.JProgressBar();
        jTextFieldTime = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jProgressBarReplications = new javax.swing.JProgressBar();
        jPanelChartExperiment = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jCheckBoxDoctorsExperiment = new javax.swing.JCheckBox();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldMinDoctors = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldMaxDoctors = new javax.swing.JTextField();
        jTextFieldShowNth = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldWorkerWait = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldWorkerQueue = new javax.swing.JTextField();
        jTextFieldWorkerEfficiency = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldDoctorWait = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldDoctorQueue = new javax.swing.JTextField();
        jTextFieldDoctorEfficiency = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldNurseWait = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldNurseQueue = new javax.swing.JTextField();
        jTextFieldNurseEfficiency = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jTextFieldDeviation = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldWaitingRoom = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaEfficiencyWorkers = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaAvailabilityWorkers = new javax.swing.JTextArea();
        jLabelRegistrationQueue = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaEfficiencyDoctors = new javax.swing.JTextArea();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaAvailabilityDoctors = new javax.swing.JTextArea();
        jLabelExaminationQueue = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaEfficiencyNurses = new javax.swing.JTextArea();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaAvailabilityNurses = new javax.swing.JTextArea();
        jLabelVaccinationQueue = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabelWaitings = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulation Settings"));

        jTextFieldReplications.setText("1000");
        jTextFieldReplications.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldReplicationsKeyReleased(evt);
            }
        });

        jLabel9.setText("Replications:");

        jButtonStart.setText("Start");
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        jButtonStop.setBackground(new java.awt.Color(255, 153, 153));
        jButtonStop.setText("Stop");
        jButtonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopActionPerformed(evt);
            }
        });

        jButtonPause.setBackground(new java.awt.Color(255, 255, 204));
        jButtonPause.setText("Pause");
        jButtonPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPauseActionPerformed(evt);
            }
        });

        jLabel1.setText("Speed:");

        jCheckBoxMaxSpeed.setSelected(true);
        jCheckBoxMaxSpeed.setText("MAX");
        jCheckBoxMaxSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMaxSpeedActionPerformed(evt);
            }
        });

        jLabel2.setText("Number of workers:");

        jLabel3.setText("Number of doctors:");

        jLabel4.setText("Number of nurses:");

        jTextFieldWorkers.setText("21");

        jTextFieldDoctors.setText("30");

        jTextFieldNurses.setText("20");
        jTextFieldNurses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNursesActionPerformed(evt);
            }
        });

        jLabel5.setText("Ordered people:");

        jTextFieldOrderedPeople.setText("4000");

        jSliderSpeed.setMajorTickSpacing(7);
        jSliderSpeed.setMaximum(30);
        jSliderSpeed.setMinimum(1);
        jSliderSpeed.setPaintTicks(true);
        jSliderSpeed.setValue(1);
        jSliderSpeed.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSpeedStateChanged(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Replication Time"));

        jTextFieldTime.setEditable(false);
        jTextFieldTime.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldTime.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jTextFieldTime.setForeground(new java.awt.Color(255, 255, 51));
        jTextFieldTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldTime.setText("08:00:00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBarEvents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldTime))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jTextFieldTime, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBarEvents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButtonStart)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPause)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonStop))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addComponent(jSliderSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxMaxSpeed))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldReplications, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNurses)
                                    .addComponent(jTextFieldDoctors)
                                    .addComponent(jTextFieldWorkers)
                                    .addComponent(jTextFieldOrderedPeople)))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldReplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBoxMaxSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSliderSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldWorkers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldNurses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldOrderedPeople, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonStart)
                    .addComponent(jButtonPause)
                    .addComponent(jButtonStop))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulation experiment"));

        jPanelChartExperiment.setBorder(javax.swing.BorderFactory.createTitledBorder("Average examination queue size chart"));
        jPanelChartExperiment.setLayout(new javax.swing.BoxLayout(jPanelChartExperiment, javax.swing.BoxLayout.LINE_AXIS));

        jLabel22.setText("Replications per point:");

        jCheckBoxDoctorsExperiment.setText("Doctor's Experiment");
        jCheckBoxDoctorsExperiment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDoctorsExperimentActionPerformed(evt);
            }
        });

        jLabel23.setText("Min doctors:");

        jTextFieldMinDoctors.setText("10");
        jTextFieldMinDoctors.setEnabled(false);
        jTextFieldMinDoctors.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMinDoctorsKeyReleased(evt);
            }
        });

        jLabel24.setText("Max doctors:");

        jTextFieldMaxDoctors.setText("15");
        jTextFieldMaxDoctors.setEnabled(false);
        jTextFieldMaxDoctors.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMaxDoctorsKeyReleased(evt);
            }
        });

        jTextFieldShowNth.setText("1000");
        jTextFieldShowNth.setEnabled(false);
        jTextFieldShowNth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldShowNthKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBarReplications, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelChartExperiment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxDoctorsExperiment, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldShowNth, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMinDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMaxDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jProgressBarReplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDoctorsExperiment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jTextFieldShowNth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jTextFieldMinDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jTextFieldMaxDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelChartExperiment, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulation State"));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Workers"));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Queue waiting");

        jTextFieldWorkerWait.setEditable(false);
        jTextFieldWorkerWait.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldWorkerWait.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWorkerWait.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWorkerWait.setText("0.000000");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Queue length");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Efficiency");

        jTextFieldWorkerQueue.setEditable(false);
        jTextFieldWorkerQueue.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldWorkerQueue.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWorkerQueue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWorkerQueue.setText("0.000000");

        jTextFieldWorkerEfficiency.setEditable(false);
        jTextFieldWorkerEfficiency.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldWorkerEfficiency.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWorkerEfficiency.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWorkerEfficiency.setText("0.000000");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldWorkerWait))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldWorkerQueue))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWorkerEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldWorkerWait, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWorkerQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWorkerEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Doctors"));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Queue waiting");

        jTextFieldDoctorWait.setEditable(false);
        jTextFieldDoctorWait.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldDoctorWait.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldDoctorWait.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDoctorWait.setText("0.000000");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Queue length");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Efficiency");

        jTextFieldDoctorQueue.setEditable(false);
        jTextFieldDoctorQueue.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldDoctorQueue.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldDoctorQueue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDoctorQueue.setText("0.000000");

        jTextFieldDoctorEfficiency.setEditable(false);
        jTextFieldDoctorEfficiency.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldDoctorEfficiency.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldDoctorEfficiency.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDoctorEfficiency.setText("0.000000");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldDoctorWait))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldDoctorQueue))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDoctorEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDoctorWait, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDoctorQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDoctorEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Nurses"));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Queue waiting");

        jTextFieldNurseWait.setEditable(false);
        jTextFieldNurseWait.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldNurseWait.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldNurseWait.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNurseWait.setText("0.000000");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Queue length");

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Efficiency");

        jTextFieldNurseQueue.setEditable(false);
        jTextFieldNurseQueue.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldNurseQueue.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldNurseQueue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNurseQueue.setText("0.000000");

        jTextFieldNurseEfficiency.setEditable(false);
        jTextFieldNurseEfficiency.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldNurseEfficiency.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldNurseEfficiency.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNurseEfficiency.setText("0.000000");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldNurseWait))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldNurseQueue))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNurseEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNurseWait, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNurseQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNurseEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Waiting room deviation"));

        jTextFieldDeviation.setEditable(false);
        jTextFieldDeviation.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldDeviation.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jTextFieldDeviation.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDeviation.setText("< Nan ; Nan >");

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Average waiting:");

        jTextFieldWaitingRoom.setEditable(false);
        jTextFieldWaitingRoom.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldWaitingRoom.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWaitingRoom.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWaitingRoom.setText("0.000000");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDeviation)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWaitingRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWaitingRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextFieldDeviation, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Replication Detail"));
        jPanel1.setDoubleBuffered(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Registration"));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Efficiency of workers"));
        jPanel10.setPreferredSize(new java.awt.Dimension(170, 50));

        jTextAreaEfficiencyWorkers.setEditable(false);
        jTextAreaEfficiencyWorkers.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaEfficiencyWorkers.setColumns(15);
        jTextAreaEfficiencyWorkers.setRows(5);
        jScrollPane2.setViewportView(jTextAreaEfficiencyWorkers);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Availability of workers"));
        jPanel11.setPreferredSize(new java.awt.Dimension(170, 50));

        jTextAreaAvailabilityWorkers.setEditable(false);
        jTextAreaAvailabilityWorkers.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaAvailabilityWorkers.setColumns(15);
        jTextAreaAvailabilityWorkers.setRows(5);
        jTextAreaAvailabilityWorkers.setBorder(null);
        jScrollPane1.setViewportView(jTextAreaAvailabilityWorkers);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
        );

        jLabelRegistrationQueue.setText("Queue: 0");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabelRegistrationQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRegistrationQueue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Examination"));

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Efficiency of doctors"));
        jPanel13.setPreferredSize(new java.awt.Dimension(170, 50));

        jTextAreaEfficiencyDoctors.setEditable(false);
        jTextAreaEfficiencyDoctors.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaEfficiencyDoctors.setColumns(15);
        jTextAreaEfficiencyDoctors.setRows(5);
        jScrollPane4.setViewportView(jTextAreaEfficiencyDoctors);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Availability of doctors"));
        jPanel14.setPreferredSize(new java.awt.Dimension(170, 50));

        jTextAreaAvailabilityDoctors.setEditable(false);
        jTextAreaAvailabilityDoctors.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaAvailabilityDoctors.setColumns(15);
        jTextAreaAvailabilityDoctors.setRows(5);
        jScrollPane3.setViewportView(jTextAreaAvailabilityDoctors);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        jLabelExaminationQueue.setText("Queue: 0");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabelExaminationQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelExaminationQueue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Vaccination"));

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Efficiency of nurses"));
        jPanel16.setPreferredSize(new java.awt.Dimension(170, 50));

        jTextAreaEfficiencyNurses.setEditable(false);
        jTextAreaEfficiencyNurses.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaEfficiencyNurses.setColumns(15);
        jTextAreaEfficiencyNurses.setRows(5);
        jScrollPane6.setViewportView(jTextAreaEfficiencyNurses);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Availability of nurses"));
        jPanel17.setPreferredSize(new java.awt.Dimension(170, 50));

        jTextAreaAvailabilityNurses.setEditable(false);
        jTextAreaAvailabilityNurses.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaAvailabilityNurses.setColumns(15);
        jTextAreaAvailabilityNurses.setRows(5);
        jScrollPane5.setViewportView(jTextAreaAvailabilityNurses);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );

        jLabelVaccinationQueue.setText("Queue: 0");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabelVaccinationQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelVaccinationQueue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Waiting room"));

        jLabelWaitings.setText("Waiting: 0");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelWaitings)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelWaitings)
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        
        this.jTextFieldReplications.setEnabled(false);
        this.jTextFieldWorkers.setEnabled(false);
        this.jTextFieldDoctors.setEnabled(false);
        this.jTextFieldNurses.setEnabled(false);
        this.jTextFieldOrderedPeople.setEnabled(false);
        this.jButtonPause.setEnabled(true);
        this.jButtonStop.setEnabled(true);
        this.jButtonStart.setEnabled(false);
        this.jCheckBoxDoctorsExperiment.setEnabled(false);
        
        this.jTextFieldShowNth.setEnabled(false);
        this.jTextFieldMinDoctors.setEnabled(false);
        this.jTextFieldMaxDoctors.setEnabled(false);
        
        boolean paused = false;
        try {
            paused = this.simulation.getPaused();
        } catch (Exception e) {
        }
        
        if (paused) {
            this.simulation.setPaused(false);
        } else {
            
            this.jTextFieldTime.setText("08:00:00");
            this.jProgressBarEvents.setValue(0);
            this.jProgressBarReplications.setValue(0);
            this.jTextFieldWorkerWait.setText(String.format("%.6f", 0.0));
            this.jTextFieldWorkerQueue.setText("" + 0);
            this.jTextFieldWorkerEfficiency.setText(String.format("%.4f", 0.0) + "%");
            this.jTextFieldDoctorWait.setText(String.format("%.6f", 0.0));
            this.jTextFieldDoctorQueue.setText("" + 0);
            this.jTextFieldDoctorEfficiency.setText(String.format("%.4f", 0.0) + "%");
            this.jTextFieldNurseWait.setText(String.format("%.6f", 0.0));
            this.jTextFieldNurseQueue.setText("" + 0);
            this.jTextFieldNurseEfficiency.setText(String.format("%.4f", 0.0) + "%");
            
            this.jLabelRegistrationQueue.setText("Arrivals: " + 0 + ", Queue: " + 0);
            this.jTextAreaAvailabilityWorkers.setText("");
            this.jTextAreaEfficiencyWorkers.setText("");
            this.jLabelExaminationQueue.setText("Queue: " + 0);
            this.jTextAreaAvailabilityDoctors.setText("");
            this.jTextAreaEfficiencyDoctors.setText("");
            this.jLabelVaccinationQueue.setText("Queue: " + 0);
            this.jTextAreaAvailabilityNurses.setText("");
            this.jTextAreaEfficiencyNurses.setText("");
            this.jLabelWaitings.setText("Waiting: " + 0 + ", Departures: " + 0);
            this.jTextFieldDeviation.setText("< Nan ; Nan >");
        
            int replications = Integer.valueOf(this.jTextFieldReplications.getText());
            this.showNth = Integer.valueOf(this.jTextFieldShowNth.getText());
            double speed = Double.valueOf(this.jSliderSpeed.getValue());
            boolean maxSpeed = this.jCheckBoxMaxSpeed.isSelected();
            int workers = Integer.valueOf(this.jTextFieldWorkers.getText());
            int doctors = Integer.valueOf(this.jTextFieldDoctors.getText());
            int nurses = Integer.valueOf(this.jTextFieldNurses.getText());
            int orderedPeople = Integer.valueOf(this.jTextFieldOrderedPeople.getText());
            
            boolean experiment = this.jCheckBoxDoctorsExperiment.isSelected();
            int minDoctors = Integer.valueOf(this.jTextFieldMinDoctors.getText());
            int maxDoctors = Integer.valueOf(this.jTextFieldMaxDoctors.getText());
            
            int amountOfGenerators = workers;
            if (amountOfGenerators < doctors) {
                amountOfGenerators = doctors;
            } else if (amountOfGenerators < nurses) {
                amountOfGenerators = nurses;
            }
            if (experiment && amountOfGenerators < maxDoctors) {
                amountOfGenerators = maxDoctors;
            }
            
            Seeder seeder = new Seeder();
            Generators generators = new Generators(seeder.sample(), amountOfGenerators);
            generators.setExpectedArrivals(orderedPeople);
            
            this.simulation = new VaccinationCenter(replications, 32400, generators, workers, doctors, nurses, orderedPeople, experiment, minDoctors, maxDoctors);
            if (experiment) {
                this.simulation.setRefreshPerNth(this.showNth);
            }

            this.simulation.registerDelegate(this);
            this.simulation.setSpeedRun(maxSpeed);
            this.simulation.setSpeed(speed);
            
            this.experimentChart = new Chart("Average queue for doctors", "Number of doctors", "Average queue", () -> this.simulation.getDoctorsSize(), () -> this.simulation.getAverageExaminationQueueLength(this.showNth)); 
            this.jPanelChartExperiment.removeAll();
            this.jPanelChartExperiment.add(this.experimentChart.getPlot());         
            this.jPanelChartExperiment.validate(); 
            this.experimentChart.startThreads();
            
            this.thread = new Thread(() -> { 
                this.simulation.simulate();
            });
            this.thread.start(); 
        }

        
    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopActionPerformed

        this.jTextFieldReplications.setEnabled(true);
        this.jTextFieldWorkers.setEnabled(true);
        this.jTextFieldDoctors.setEnabled(true);
        this.jTextFieldNurses.setEnabled(true);
        this.jTextFieldOrderedPeople.setEnabled(true);
        this.jButtonPause.setEnabled(false);
        this.jButtonStop.setEnabled(false);
        this.jButtonStart.setEnabled(true);
        this.jCheckBoxDoctorsExperiment.setEnabled(true);
        
        if (this.jCheckBoxDoctorsExperiment.isSelected()) {
            this.jTextFieldShowNth.setEnabled(true);
            this.jTextFieldMinDoctors.setEnabled(true);
            this.jTextFieldMaxDoctors.setEnabled(true);
        } else {
            this.jTextFieldShowNth.setEnabled(false);
            this.jTextFieldMinDoctors.setEnabled(false);
            this.jTextFieldMaxDoctors.setEnabled(false);
        }

        this.simulation.setPaused(false);
        this.simulation.setStopped(true);
        
        try {            
            this.thread.join();     
        } catch (InterruptedException ex) {
            throw new RuntimeException(ex);
        }    
        
        this.experimentChart.stopThreads();
        
    }//GEN-LAST:event_jButtonStopActionPerformed

    private void jButtonPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPauseActionPerformed

        this.jButtonPause.setEnabled(false);
        this.jButtonStop.setEnabled(true);
        this.jButtonStart.setEnabled(true);
        
        this.simulation.setPaused(true);
        
    }//GEN-LAST:event_jButtonPauseActionPerformed

    private void jTextFieldNursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNursesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNursesActionPerformed

    private void jCheckBoxMaxSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMaxSpeedActionPerformed
        
        try {
            this.simulation.setSpeedRun(this.jCheckBoxMaxSpeed.isSelected());
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_jCheckBoxMaxSpeedActionPerformed

    private void jCheckBoxDoctorsExperimentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDoctorsExperimentActionPerformed
        
        if (this.jCheckBoxDoctorsExperiment.isSelected()) {
            this.jTextFieldShowNth.setEnabled(true);
            this.jTextFieldMinDoctors.setEnabled(true);
            this.jTextFieldMaxDoctors.setEnabled(true);
        } else {
            this.jTextFieldShowNth.setEnabled(false);
            this.jTextFieldMinDoctors.setEnabled(false);
            this.jTextFieldMaxDoctors.setEnabled(false);
        }
        
    }//GEN-LAST:event_jCheckBoxDoctorsExperimentActionPerformed

    private void jSliderSpeedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSpeedStateChanged

        try {
            this.simulation.setSpeed(this.jSliderSpeed.getValue());
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jSliderSpeedStateChanged

    private void jTextFieldReplicationsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldReplicationsKeyReleased
         
        int replications = Integer.valueOf(this.jTextFieldReplications.getText());
        int min = Integer.valueOf(this.jTextFieldMinDoctors.getText());
        int max = Integer.valueOf(this.jTextFieldMaxDoctors.getText());
        
        int dif = max - min + 1;
        this.jTextFieldShowNth.setText("" + (int) Math.floor((double) replications / dif));
        
    }//GEN-LAST:event_jTextFieldReplicationsKeyReleased

    private void jTextFieldMaxDoctorsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMaxDoctorsKeyReleased

        int nth = Integer.valueOf(this.jTextFieldShowNth.getText());
        int min = Integer.valueOf(this.jTextFieldMinDoctors.getText());
        int max = Integer.valueOf(this.jTextFieldMaxDoctors.getText());
        
        if (max <= min) {
            min = max - 1;
            this.jTextFieldMinDoctors.setText("" + (int) (min));
        }
        
        int dif = max - min + 1;
        this.jTextFieldReplications.setText("" + (int) (dif * nth));
        
    }//GEN-LAST:event_jTextFieldMaxDoctorsKeyReleased

    private void jTextFieldMinDoctorsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMinDoctorsKeyReleased

        int nth = Integer.valueOf(this.jTextFieldShowNth.getText());
        int min = Integer.valueOf(this.jTextFieldMinDoctors.getText());
        int max = Integer.valueOf(this.jTextFieldMaxDoctors.getText());
        
        if (max <= min) {
            max = min + 1;
            this.jTextFieldMaxDoctors.setText("" + (int) (max));
        }
        
        int dif = max - min + 1;
        this.jTextFieldReplications.setText("" + (int) (dif * nth));
        
    }//GEN-LAST:event_jTextFieldMinDoctorsKeyReleased

    private void jTextFieldShowNthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldShowNthKeyReleased
       
        int nth = Integer.valueOf(this.jTextFieldShowNth.getText());
        int min = Integer.valueOf(this.jTextFieldMinDoctors.getText());
        int max = Integer.valueOf(this.jTextFieldMaxDoctors.getText());
        
        int dif = max - min + 1;
        this.jTextFieldReplications.setText("" + (int) (dif * nth));
        
    }//GEN-LAST:event_jTextFieldShowNthKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPause;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JCheckBox jCheckBoxDoctorsExperiment;
    private javax.swing.JCheckBox jCheckBoxMaxSpeed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelExaminationQueue;
    private javax.swing.JLabel jLabelRegistrationQueue;
    private javax.swing.JLabel jLabelVaccinationQueue;
    private javax.swing.JLabel jLabelWaitings;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelChartExperiment;
    private javax.swing.JProgressBar jProgressBarEvents;
    private javax.swing.JProgressBar jProgressBarReplications;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSlider jSliderSpeed;
    private javax.swing.JTextArea jTextAreaAvailabilityDoctors;
    private javax.swing.JTextArea jTextAreaAvailabilityNurses;
    private javax.swing.JTextArea jTextAreaAvailabilityWorkers;
    private javax.swing.JTextArea jTextAreaEfficiencyDoctors;
    private javax.swing.JTextArea jTextAreaEfficiencyNurses;
    private javax.swing.JTextArea jTextAreaEfficiencyWorkers;
    private javax.swing.JTextField jTextFieldDeviation;
    private javax.swing.JTextField jTextFieldDoctorEfficiency;
    private javax.swing.JTextField jTextFieldDoctorQueue;
    private javax.swing.JTextField jTextFieldDoctorWait;
    private javax.swing.JTextField jTextFieldDoctors;
    private javax.swing.JTextField jTextFieldMaxDoctors;
    private javax.swing.JTextField jTextFieldMinDoctors;
    private javax.swing.JTextField jTextFieldNurseEfficiency;
    private javax.swing.JTextField jTextFieldNurseQueue;
    private javax.swing.JTextField jTextFieldNurseWait;
    private javax.swing.JTextField jTextFieldNurses;
    private javax.swing.JTextField jTextFieldOrderedPeople;
    private javax.swing.JTextField jTextFieldReplications;
    private javax.swing.JTextField jTextFieldShowNth;
    private javax.swing.JTextField jTextFieldTime;
    private javax.swing.JTextField jTextFieldWaitingRoom;
    private javax.swing.JTextField jTextFieldWorkerEfficiency;
    private javax.swing.JTextField jTextFieldWorkerQueue;
    private javax.swing.JTextField jTextFieldWorkerWait;
    private javax.swing.JTextField jTextFieldWorkers;
    // End of variables declaration//GEN-END:variables

    @Override
    public void afterEvent() {
        
        this.jTextFieldTime.setText(timeToString());
        this.jProgressBarEvents.setValue((int) ((this.simulation.getTime() / (double) this.simulation.getFinishTime()) * 100));
        
        this.jLabelRegistrationQueue.setText("Arrivals: " + this.simulation.getArrivals() + ", Queue: " + this.simulation.getRegistrationQueueSize());
        this.jTextAreaAvailabilityWorkers.setText(this.simulation.getWorkersStatus());
        this.jTextAreaEfficiencyWorkers.setText(this.simulation.getWorkersEfficiency());
        this.jLabelExaminationQueue.setText("Queue: " + this.simulation.getExaminationQueueSize());
        this.jTextAreaAvailabilityDoctors.setText(this.simulation.getDoctorsStatus());
        this.jTextAreaEfficiencyDoctors.setText(this.simulation.getDoctorsEfficiency());
        this.jLabelVaccinationQueue.setText("Queue: " + this.simulation.getVaccinationQueueSize());
        this.jTextAreaAvailabilityNurses.setText(this.simulation.getNursesStatus());
        this.jTextAreaEfficiencyNurses.setText(this.simulation.getNursesEfficiency());
        this.jLabelWaitings.setText("Waiting: " + this.simulation.getWaitingRoomFilling() + ", Departures: " + this.simulation.getDepartures());
        
        this.jTextFieldWorkerWait.setText(String.format("%.6f", this.simulation.getStatistics().getAverageRegistrationWaitingTime()));
        this.jTextFieldWorkerQueue.setText(String.format("%.6f", this.simulation.getStatistics().getAverageRegistrationQueueLength(this.simulation.getTime())));
        this.jTextFieldWorkerEfficiency.setText(String.format("%.4f", this.simulation.getWorkersEfficiencyInTime(this.simulation.getTime())) + "%");
        this.jTextFieldDoctorWait.setText(String.format("%.6f", this.simulation.getStatistics().getAverageExaminationWaitingTime()));
        this.jTextFieldDoctorQueue.setText(String.format("%.6f", this.simulation.getStatistics().getAverageExaminationQueueLength(this.simulation.getTime())));
        this.jTextFieldDoctorEfficiency.setText(String.format("%.4f", this.simulation.getDoctorsEfficiencyInTime(this.simulation.getTime())) + "%");
        this.jTextFieldNurseWait.setText(String.format("%.6f", this.simulation.getStatistics().getAverageVaccinationWaitingTime()));
        this.jTextFieldNurseQueue.setText(String.format("%.6f", this.simulation.getStatistics().getAverageVaccinationQueueLength(this.simulation.getTime())));
        this.jTextFieldNurseEfficiency.setText(String.format("%.4f", this.simulation.getNursesEfficiencyInTime(this.simulation.getTime())) + "%");
        this.jTextFieldWaitingRoom.setText(String.format("%.6f", this.simulation.getStatistics().getAverageWaitingRoomFilling(this.simulation.getTime())));
        
    }
    
    @Override
    public void afterReplication() {
        
        this.simulation.updateStatistics();
        
        if (!this.simulation.getStopped() && this.simulation.getPassedReplications() % 100 == 0) {
            
            this.jTextFieldTime.setText(timeToString());
            this.jProgressBarEvents.setValue((int) ((this.simulation.getTime() / (double) this.simulation.getFinishTime()) * 100));

            this.jProgressBarReplications.setValue((int) ((this.simulation.getPassedReplications() / (double) this.simulation.getReplications()) * 100));

            this.jTextFieldWorkerWait.setText(String.format("%.6f", this.simulation.getAverageRegistrationWaitingTime()));
            this.jTextFieldWorkerQueue.setText(String.format("%.6f", this.simulation.getAverageRegistrationQueueLength()));
            this.jTextFieldWorkerEfficiency.setText(String.format("%.4f", this.simulation.getAverageRegistrationEfficiency()) + "%");
            this.jTextFieldDoctorWait.setText(String.format("%.6f", this.simulation.getAverageExaminationWaitingTime()));
            this.jTextFieldDoctorQueue.setText(String.format("%.6f", this.simulation.getAverageExaminationQueueLength(this.showNth)));
            this.jTextFieldDoctorEfficiency.setText(String.format("%.4f", this.simulation.getAverageExaminationEfficiency()) + "%");
            this.jTextFieldNurseWait.setText(String.format("%.6f", this.simulation.getAverageVaccinationWaitingTime()));
            this.jTextFieldNurseQueue.setText(String.format("%.6f", this.simulation.getAverageVaccinationQueueLength()));
            this.jTextFieldNurseEfficiency.setText(String.format("%.4f", this.simulation.getAverageVaccinationEfficiency()) + "%");
            this.jTextFieldWaitingRoom.setText(String.format("%.6f", this.simulation.getAverageWaitingRoomFilling()));
            
            this.jTextFieldDeviation.setText(this.simulation.getConfidenceInterval());
        }
        
        if (this.simulation.isExperiment() && this.simulation.getPassedReplications() % this.showNth == 0) {
            this.experimentChart.afterReplication();
        }
    }
    
    @Override
    public void afterSimulation() {
        
        this.jTextFieldReplications.setEnabled(true);
        this.jTextFieldWorkers.setEnabled(true);
        this.jTextFieldDoctors.setEnabled(true);
        this.jTextFieldNurses.setEnabled(true);
        this.jTextFieldOrderedPeople.setEnabled(true);
        this.jButtonPause.setEnabled(false);
        this.jButtonStop.setEnabled(false);
        this.jButtonStart.setEnabled(true);
        this.jCheckBoxDoctorsExperiment.setEnabled(true);
        
        if (this.jCheckBoxDoctorsExperiment.isSelected()) {
            this.jTextFieldShowNth.setEnabled(true);
            this.jTextFieldMinDoctors.setEnabled(true);
            this.jTextFieldMaxDoctors.setEnabled(true);
        } else {
            this.jTextFieldShowNth.setEnabled(false);
            this.jTextFieldMinDoctors.setEnabled(false);
            this.jTextFieldMaxDoctors.setEnabled(false);
        }
        this.jTextFieldShowNth.setEnabled(true);

        this.simulation.setPaused(false);
        this.simulation.setStopped(false);
        
        try {            
            this.thread.join();     
        } catch (InterruptedException ex) {
            throw new RuntimeException(ex);
        } 
        
        this.experimentChart.stopThreads();
    }
    
    private String timeToString() {
        String time = "";
        boolean overtime = false;
        double simTime = this.simulation.getTime();
        int hours = (int) Math.floor(simTime / 3600);
        int minutes = (int) Math.floor((simTime / 60) % 60);
        int seconds = (int) (simTime - (hours * 3600) - (minutes * 60));
        if (hours < 2) {
            time += ("0" + (8 + hours));
        } else if ((hours + 8) > 17) {
            overtime = true;
            time += 17;
        } else {
            time += (8 + hours);
        }
        time += ":";
        if (minutes < 10) {
            time += ("0" + minutes);
        } else {
            time += minutes;
        }
        time += ":";
        if (seconds < 10) {
            time += ("0" + seconds);
        } else {
            time += seconds;
        }
        if (overtime) {
            time += " +" + String.format("%.1f", ((simTime / 3600) + 8 - 17)) + "h";
        }
        return time;
    }
}
